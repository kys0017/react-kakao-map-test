{"version":3,"sources":["components/map/KakaoMap.jsx","components/SearchContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["StyledMapDiv","styled","div","KakaoMap","useState","setKakaoMap","container","useRef","useEffect","script","document","createElement","async","src","process","head","appendChild","onload","kakao","maps","load","options","center","LatLng","level","map","Map","current","ref","StyledSearchContainer","SearchContainer","setOptions","queryCallApi","q","axios","get","headers","Authorization","then","documents","data","console","log","length","result","idx","value","place_name","label","style","display","justifyContent","fontSize","road_address_name","catch","e","error","debounce","_","dropdownMatchSelectWidth","width","onSelect","selected","onSearch","Search","padding","size","enterButton","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0PAIMA,EAAeC,IAAOC,IAAV,2GAmCHC,EA5BE,WACb,MAAgCC,mBAAS,MAAzC,mBAAiBC,GAAjB,WAEMC,EAAYC,mBAsBlB,OApBAC,qBAAU,WACN,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,OAAQ,EACfH,EAAOI,IAAP,uDAA6DC,mCAA7D,mBAEAJ,SAASK,KAAKC,YAAYP,GAE1BA,EAAOQ,OAAS,WACZC,MAAMC,KAAKC,MAAK,WACZ,IACMC,EAAU,CACZC,OAFW,IAAIJ,MAAMC,KAAKI,OAAO,SAAU,YAG3CC,MAAO,GAELC,EAAM,IAAIP,MAAMC,KAAKO,IAAIpB,EAAUqB,QAASN,GAClDhB,EAAYoB,SAGrB,IAEI,cAACzB,EAAD,CAAc4B,IAAKtB,K,oDC9BxBuB,EAAwB5B,IAAOC,IAAV,8OAkGZ4B,EA7DS,WACpB,MAA8B1B,mBAAS,IAAvC,mBAAOiB,EAAP,KAAgBU,EAAhB,KAEMC,EAAe,SAACC,GACbA,GACLC,IACKC,IADL,qEAEsEF,EAFtE,4BAGQ,CACIG,QAAS,CACLC,cACI,8CAIfC,MAAK,YAA8B,IAAnBC,EAAkB,EAA1BC,KAAQD,UACbE,QAAQC,IAAIT,GACZQ,QAAQC,IAAIH,GACZR,GAAW,kBACPQ,EAAUI,OAAS,EAAoBJ,EAzC5Cd,KAAI,SAACmB,EAAQC,GAEpB,MAAO,CACHC,MAAM,GAAD,OAAKF,EAAOG,YAAZ,OAAyBF,GAC9BG,MACI,qBACIC,MAAO,CACHC,QAAS,OACTC,eAAgB,iBAHxB,SAMI,iCACKP,EAAOG,WAAY,IACpB,sBAAME,MAAO,CAAEG,SAAU,UAAzB,SACKR,EAAOS,6BA2BoC,SAG3DC,OAAM,SAACC,GAAD,OAAOd,QAAQe,MAAM,qDAG9BC,EAAWC,IAAED,UAAS,SAACxB,GAAD,OAAOD,EAAaC,KAAI,KAepD,OACI,cAACJ,EAAD,UACI,cAAC,IAAD,CACI8B,yBAA0B,IAC1BV,MAAO,CACHW,MAAO,KAEXvC,QAASA,EACTwC,SAZK,SAACC,GACdrB,QAAQC,IAAIoB,IAYJC,SAtBS,SAACjB,GAClB,IAAKA,EAGD,OAFAL,QAAQC,IAAI,4BACZX,GAAW,iBAAM,MAGrB0B,EAASX,IASL,SASI,cAAC,IAAMkB,OAAP,CACIf,MAAO,CAAEgB,QAAS,QAClBC,KAAK,QACLC,aAAW,SCrFhBC,MATf,WACI,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,QCOGC,EAdS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,8BAAqBjC,MACjB,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDxBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJrE,SAASsE,eAAe,SAM5BX,M","file":"static/js/main.47297222.chunk.js","sourcesContent":["/*global kakao*/ // <---- 주석인줄 알았는데 이거 업으면 kakao 객체 없다고 에러남\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\n\nconst StyledMapDiv = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n`;\n\nconst KakaoMap = () => {\n    const [kakaoMap, setKakaoMap] = useState(null);\n\n    const container = useRef();\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.async = true;\n        script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_JS_APP_KEY}&autoload=false`;\n        // script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAO_JS_APP_KEY}&autoload=false&libraries=LIBRARY`;\n        document.head.appendChild(script);\n\n        script.onload = () => {\n            kakao.maps.load(() => {\n                const center = new kakao.maps.LatLng(37.50802, 127.062835);\n                const options = {\n                    center,\n                    level: 3,\n                };\n                const map = new kakao.maps.Map(container.current, options);\n                setKakaoMap(map);\n            });\n        };\n    }, []);\n\n    return <StyledMapDiv ref={container} />;\n};\n\nexport default KakaoMap;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { AutoComplete, Input } from 'antd';\nimport _ from 'lodash';\nimport axios from 'axios';\n\nconst StyledSearchContainer = styled.div`\n    display: inline-flex;\n    background: white;\n    opacity: 0.9;\n    width: 300px;\n    height: 200px;\n    border-radius: 10px;\n\n    position: fixed;\n    top: 10px;\n    left: 10px;\n    z-index: 99;\n`;\n\nconst searchResult = (q, resultList) =>\n    resultList.map((result, idx) => {\n        // const category = `${q}${idx}`;\n        return {\n            value: `${result.place_name}${idx}`,\n            label: (\n                <div\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                    }}\n                >\n                    <span>\n                        {result.place_name}{' '}\n                        <span style={{ fontSize: '0.5rem' }}>\n                            {result.road_address_name}\n                        </span>\n                    </span>\n                </div>\n            ),\n        };\n    });\n\nconst SearchContainer = () => {\n    const [options, setOptions] = useState([]);\n\n    const queryCallApi = (q) => {\n        if (!q) return;\n        axios\n            .get(\n                `https://dapi.kakao.com//v2/local/search/keyword.json?query=${q}&category_group_code=CE7`, // 카페만 검색\n                {\n                    headers: {\n                        Authorization:\n                            'KakaoAK 6797801199c3b3d73ff33c7ca3edea88',\n                    },\n                }\n            )\n            .then(({ data: { documents } }) => {\n                console.log(q);\n                console.log(documents);\n                setOptions(() =>\n                    documents.length > 0 ? searchResult(q, documents) : []\n                );\n            })\n            .catch((e) => console.error('키워드 검색 에러!'));\n    };\n\n    const debounce = _.debounce((q) => queryCallApi(q), 300);\n\n    const handleSearch = (value) => {\n        if (!value) {\n            console.log('!valueeeeeeeeeeeeee');\n            setOptions(() => []);\n            return;\n        }\n        debounce(value);\n    };\n\n    const onSelect = (selected) => {\n        console.log(selected);\n    };\n\n    return (\n        <StyledSearchContainer>\n            <AutoComplete\n                dropdownMatchSelectWidth={252}\n                style={{\n                    width: 300,\n                }}\n                options={options}\n                onSelect={onSelect}\n                onSearch={handleSearch}\n            >\n                <Input.Search\n                    style={{ padding: '10px' }}\n                    size=\"large\"\n                    enterButton\n                />\n            </AutoComplete>\n        </StyledSearchContainer>\n    );\n};\n\nexport default SearchContainer;\n","import KakaoMap from './components/map/KakaoMap';\nimport SearchContainer from './components/SearchContainer';\n\nfunction App() {\n    return (\n        <div>\n            <KakaoMap />\n            <SearchContainer />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}