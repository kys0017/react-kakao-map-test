{"version":3,"sources":["modules/mapControl.js","components/KakaoMap.jsx","components/SearchBox.jsx","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["SET_MAP","initialState","map","StyledMapDiv","styled","div","KakaoMap","dispatch","useDispatch","container","useRef","useEffect","console","log","options","center","kakao","maps","LatLng","level","Map","current","type","setMap","ref","StyledSearchBox","AiOutlineLoading3QuartersSpin","style","width","height","animationName","animationDuration","animationIterationCount","animationTimingFunction","SearchBox","kakaoMap","useSelector","state","mapControl","useState","openOptionContainer","setOpenOptionContainer","setOptions","suffix","setSuffix","query","setQuery","inputRef","allowClear","value","onReset","queryCallApi","q","axios","get","headers","Authorization","then","documents","data","isData","length","onClick","catch","e","error","debounce","_","display","padding","size","onChange","target","onFocus","className","option","place_name","moveLatLng","y","x","setCenter","onSelect","road_address_name","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a386c8c.chunk.js","sourcesContent":["/* 액션 타입 만들기 */\nconst SET_MAP = 'map/SET_MAP';\n// const SET_CENTER = 'map/SET_CENTER';\n// const SET_LEVEL = 'map/SET_LEVEL';\n\n/* 액션 생성 함수 만들기 */\nexport const setMap = (map) => ({ type: SET_MAP, map });\n// export const setCenter = (center) => ({ type: SET_CENTER, center });\n// export const setLevel = (level) => ({ type: SET_LEVEL, level });\n\n/* 초기상태 선언 */\nconst initialState = {\n    map: null,\n    // center: {\n    //     x: '127.062835',\n    //     y: '37.50802',\n    // },\n    // level: 3,\n};\n\n/* 리듀서 선언 */\nexport default function mapControl(state = initialState, action) {\n    switch (action.type) {\n        case SET_MAP:\n            return {\n                ...state,\n                map: action.map,\n            };\n        // case SET_CENTER:\n        //     return {\n        //         ...state,\n        //         center: {\n        //             ...action.center,\n        //         },\n        //     };\n        // case SET_LEVEL:\n        //     return {\n        //         ...state,\n        //         level: action.level,\n        //     };\n        default:\n            return state;\n    }\n}\n","/*global kakao*/\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { setMap } from '../modules/mapControl';\n\nconst StyledMapDiv = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n`;\n\nconst KakaoMap = () => {\n    const dispatch = useDispatch();\n    const container = useRef();\n\n    // map init\n    useEffect(() => {\n        console.log('map init!');\n        const center = new kakao.maps.LatLng('37.50802', '127.062835');\n        const options = {\n            center,\n            level: 3,\n        };\n        const map = new kakao.maps.Map(container.current, options);\n        dispatch(setMap(map));\n    }, [dispatch]);\n\n    return <StyledMapDiv ref={container} />;\n};\n\nexport default KakaoMap;\n","/*global kakao*/\nimport React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { Input } from 'antd';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport {\n    AiOutlineClose,\n    AiOutlineLoading3Quarters,\n    AiOutlineSearch,\n} from 'react-icons/ai';\n\nconst StyledSearchBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    background: white;\n    opacity: 0.9;\n    width: 300px;\n    height: 100px;\n    border-radius: 10px;\n\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    z-index: 99;\n\n    .option-container {\n        display: flex;\n        flex: 1;\n        background: white;\n        max-height: 480px;\n    }\n\n    .option-box {\n        flex: 1;\n        overflow-y: auto;\n        max-height: 480px;\n    }\n\n    .option-item {\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        overflow: hidden;\n        padding: 5px 10px;\n\n        span {\n            font-size: 0.5rem;\n        }\n\n        &:hover {\n            cursor: pointer;\n            background: #d9d9d9;\n        }\n    }\n\n    svg {\n        width: 1.5rem;\n        height: 1.5rem;\n    }\n\n    @keyframes rotate {\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n`;\n\nconst AiOutlineLoading3QuartersSpin = () => (\n    <AiOutlineLoading3Quarters\n        style={{\n            width: '1.2rem',\n            height: '1.2rem',\n            animationName: 'rotate',\n            animationDuration: '1s',\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'linear',\n        }}\n    />\n);\n\nconst SearchBox = () => {\n    const { map: kakaoMap } = useSelector((state) => ({\n        map: state.mapControl.map,\n    }));\n    const [openOptionContainer, setOpenOptionContainer] = useState(false);\n    const [options, setOptions] = useState([]);\n    const [suffix, setSuffix] = useState(<AiOutlineSearch />);\n    const [query, setQuery] = useState('');\n\n    const inputRef = useRef();\n\n    const allowClear = () => {\n        inputRef.current.state.value = '';\n        onReset();\n    };\n\n    const queryCallApi = (q) => {\n        setQuery(q);\n        axios\n            .get(\n                `https://dapi.kakao.com//v2/local/search/keyword.json?query=${q}`, // 카페만 검색\n                {\n                    headers: {\n                        Authorization:\n                            'KakaoAK 6797801199c3b3d73ff33c7ca3edea88',\n                    },\n                }\n            )\n            .then(({ data: { documents } }) => {\n                // console.log(documents);\n                const isData = documents.length > 0 ? true : false;\n                setOpenOptionContainer(isData);\n                setOptions(isData ? documents : []);\n                setSuffix(\n                    isData ? (\n                        <AiOutlineClose onClick={allowClear} />\n                    ) : (\n                        <AiOutlineSearch />\n                    )\n                );\n            })\n            .catch((e) => console.error('키워드 검색 에러!'));\n    };\n\n    const debounce = _.debounce((q) => {\n        if (!q) {\n            onReset();\n            return;\n        }\n        queryCallApi(q);\n    }, 300);\n\n    const handleSearch = (e) => {\n        setSuffix(<AiOutlineLoading3QuartersSpin />);\n        debounce(e.target.value);\n    };\n\n    const onReset = () => {\n        setQuery('');\n        setOptions([]);\n        setSuffix(<AiOutlineSearch />);\n    };\n\n    const onSelect = (e, option) => {\n        // <Input.Search value={query} /> useState 로 하니까 렌더링할 때 꼬이는지 버벅거리고 value 지워짐\n        // ref로 해결 !\n        inputRef.current.state.value = option.place_name;\n        setOpenOptionContainer(false);\n\n        const moveLatLng = new kakao.maps.LatLng(option.y, option.x);\n        kakaoMap.setCenter(moveLatLng);\n    };\n\n    const onFocus = () => {\n        if (query === inputRef.current.state.value)\n            setOpenOptionContainer(true);\n        else queryCallApi(inputRef.current.state.value);\n    };\n\n    return (\n        <StyledSearchBox>\n            <div style={{ display: 'flex' }}>\n                {/*<Input.Search*/}\n                <Input\n                    suffix={suffix}\n                    style={{ width: 300, padding: '10px' }}\n                    size=\"large\"\n                    onChange={handleSearch}\n                    ref={inputRef}\n                    onFocus={onFocus}\n                />\n            </div>\n            {openOptionContainer && (\n                <div className=\"option-container\">\n                    <div className=\"option-box\">\n                        {options.map((option) => (\n                            <div\n                                className=\"option-item\"\n                                key={option.id}\n                                onClick={(e) => onSelect(e, option)}\n                            >\n                                {option.place_name} <br />\n                                <span>{option.road_address_name}</span>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n        </StyledSearchBox>\n    );\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport KakaoMap from './components/KakaoMap';\nimport SearchBox from './components/SearchBox';\n\nfunction App() {\n    return (\n        <>\n            <KakaoMap />\n            <SearchBox className=\"search-box\" />\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport mapControl from './mapControl';\n\nconst rootReducer = combineReducers({\n    mapControl,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport rootReducer from './modules';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}